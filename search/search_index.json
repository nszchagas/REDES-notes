{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"11_09/","title":"Codifica\u00e7\u00e3o de Dados - Aula 11/09","text":""},{"location":"11_09/#tipos-de-dados-e-sinais","title":"Tipos de Dados e Sinais","text":"<p>A comunica\u00e7\u00e3o entre um transmissor (Tx) e um receptor (Rx) \u00e9 dada por meio de um canal de transmiss\u00e3o (Tx). Esse canal pode ser vol\u00e1til ou n\u00e3o vol\u00e1til, e a comunica\u00e7\u00e3o pode ser simplex (\\(A\\rightarrow B\\)), half-duplex (\\(A\\leftrightarrow B\\)), e duplex (\\(A\\leftrightarrow B\\)).</p> Fonte \\ Sinal Anal\u00f3gico Digital Anal\u00f3gica Uso de transportadoras, como por exemplo sinais em ondas AM/FM. Codecs para codificar e decodificar (Fonte anal\u00f3gica em sinal digital). Digital Modem (Fonte digital em sinal anal\u00f3gico), usando ASK (amplitude), FSK e PSK por exemplo. Placas de rede."},{"location":"11_09/#fonte-digital-e-sinal-analogico","title":"Fonte Digital e Sinal Anal\u00f3gico","text":"<ul> <li>Quando a fonte \u00e9 digital, mas o sistema que transmite \u00e9 anal\u00f3gico, os modems (modular - demodular) fazem a convers\u00e3o.</li> <li>O sistema telef\u00f4nico trabalha com redes de comuta\u00e7\u00e3o de circuitos.</li> <li>A estrutura telef\u00f4nica por exemplo, suporta 4kHz, pois foi concebido para liga\u00e7\u00f5es de voz. Ent\u00e3o a taxa de transmiss\u00e3o para comunica\u00e7\u00e3o entre computadores via sistema de telefonia \u00e9 em torno de 28.800 bps.</li> </ul>"},{"location":"11_09/#fonte-analogica-e-sinal-digital","title":"Fonte Anal\u00f3gica e Sinal Digital","text":"<ul> <li>Nesse modelo de comunica\u00e7\u00e3o \u00e9 poss\u00edvel criptografar a mensagem, pois ao transformar o sinal anal\u00f3gico em digital, ser\u00e3o gerados bits.</li> <li>Nesse modelo \u00e9 poss\u00edvel juntar bits de mensagens diferentes em um mesmo pacote, como por exemplo bits de c\u00f3digo fonte, mensagens de voz e v\u00eddeos.</li> <li>Um celular \u00e9 um exemplo de codec, que faz a convers\u00e3o da voz em bits.</li> </ul> <p>Um CODEC pode transformar uma onda sonora, como uma m\u00fasica por exemplo, em bin\u00e1rios, utilizando a t\u00e9cnica PCM (pulse code modulation), que faz uma amostragem de PAMs.</p> <p>O teorema da amostragem (Nyquist-Shannon) mostra que aparelhos PCM podem operar sem distor\u00e7\u00f5es na frequ\u00eancia desejada se eles fizerem pelo menos 2*frequ\u00eancia do sinal amostragens. Ent\u00e3o, por exemplo, para transmiss\u00e3o a 4kHz o ideal seria de pelo menos 8 mil amostras por segundo.</p>"},{"location":"11_09/#fonte-digital-e-sinal-digital","title":"Fonte Digital e Sinal Digital","text":"<p>Em uma rede local pode ser utilizada uma banda b\u00e1sica, e os bits s\u00e3o simplesmente injetados na banda b\u00e1sica, sem necessidade de convers\u00e3o.</p>"},{"location":"11_09/#leituras-a-fazer","title":"Leituras a Fazer","text":"<ul> <li>Transmiss\u00e3o de Dados</li> <li>Codifica\u00e7\u00e3o de Dados</li> <li>Apostila de Comuta\u00e7\u00e3o de Circuitos</li> <li>Apostila de Comuta\u00e7\u00e3o de Pacotes</li> <li>Apostila de Multiplexa\u00e7\u00e3o</li> </ul>"},{"location":"http_lab/http/","title":"Protocolo HTTP","text":"Identifica\u00e7\u00e3o - Aluno Nicolas Chagas Souza Matr\u00edcula 200042327 Disciplina Fundamentos de Redes de Computadores Turma 01"},{"location":"http_lab/http/#referencial-teorico","title":"Referencial Te\u00f3rico","text":"<p>O protocolo HTTP encontra-se na camada de aplica\u00e7\u00e3o dos modelos TCP/IP e OSI.</p> <p> Modelo OSI. (Fonte: freeCodeCamp [1]) </p>"},{"location":"http_lab/http/#arquitetura-cliente-servidor","title":"Arquitetura Cliente-Servidor","text":""},{"location":"http_lab/http/#cliente","title":"Cliente","text":"<ul> <li>Dispositivo ou aplicativo que solicita servi\u00e7os ou recursos.</li> <li>Geralmente um navegador web, mas pode ser qualquer aplicativo que fa\u00e7a requisi\u00e7\u00f5es a servidores.</li> </ul>"},{"location":"http_lab/http/#servidor","title":"Servidor","text":"<ul> <li>Dispositivo ou programa que fornece servi\u00e7os ou recursos em resposta \u00e0s solicita\u00e7\u00f5es do cliente.</li> <li>Pode hospedar sites, aplicativos, ou dados.</li> </ul>"},{"location":"http_lab/http/#comunicacao","title":"Comunica\u00e7\u00e3o","text":"<p> Arquitetura da web. (Fonte: Tanenbaum [3])</p>"},{"location":"http_lab/http/#requisicao-request","title":"Requisi\u00e7\u00e3o (Request)","text":"<ul> <li>O cliente envia uma requisi\u00e7\u00e3o ao servidor para obter informa\u00e7\u00f5es ou realizar uma a\u00e7\u00e3o.</li> <li>Utiliza o protocolo HTTP para estruturar e enviar a requisi\u00e7\u00e3o.</li> </ul>"},{"location":"http_lab/http/#resposta-response","title":"Resposta (Response)","text":"<ul> <li>O servidor processa a requisi\u00e7\u00e3o e envia uma resposta de volta ao cliente.</li> <li>A resposta cont\u00e9m os dados solicitados ou informa\u00e7\u00f5es sobre a execu\u00e7\u00e3o da a\u00e7\u00e3o.</li> </ul> <p> Arquitetura Cliente-Servidor. (Fonte: MDN [2])</p>"},{"location":"http_lab/http/#o-protocolo-http","title":"O Protocolo HTTP","text":"<ul> <li>Desenvolvido por Tim Berners-Lee entre 1989 e 1991, no CERN (Organiza\u00e7\u00e3o Europeia para a Pesquisa Nuclear), o HTTP \u00e9 o protocolo subjacente \u00e0 World Wide Web.</li> <li>Conclu\u00eddo at\u00e9 o final de 1990, marcando o in\u00edcio oficial da World Wide Web em agosto de 1991.</li> <li>Define as regras para a comunica\u00e7\u00e3o entre cliente e servidor na web.</li> <li> <p>Permite a transfer\u00eancia de documentos hipertexto, como p\u00e1ginas web.</p> </li> <li> <p>Requisi\u00e7\u00f5es e respostas HTTP t\u00eam um formato espec\u00edfico com cabe\u00e7alhos e, opcionalmente, um corpo com dados.</p> </li> </ul> <p> Alguns cabe\u00e7alhos HTTP. (Fonte: Tanenbaum [3])</p> <ul> <li>Cada requisi\u00e7\u00e3o \u00e9 independente das anteriores, sem armazenamento de estado entre transa\u00e7\u00f5es (stateless).</li> <li>Define diferentes m\u00e9todos, como <code>GET</code> para obter dados, <code>POST</code> para enviar dados ao servidor, etc.</li> </ul> <p> M\u00e9todos HTTP. (Fonte: Tanenbaum [3])</p> <ul> <li>A vers\u00e3o do HTTP, o c\u00f3digo de status e a frase de motivo acompanham as respostas na linha de status.</li> <li>C\u00f3digos de status (n\u00fameros de 3 d\u00edgitos) acompanhados de frases de motivo resumem o significado do c\u00f3digo.</li> </ul> <p> C\u00f3digos de status. (Fonte: Tanenbaum [3])</p> <ul> <li>Descri\u00e7\u00f5es fornecidas na primeira linha da resposta, conhecida como linha de status.</li> </ul>"},{"location":"http_lab/http/#versoes-do-protocolo-http","title":"Vers\u00f5es do Protocolo HTTP","text":"<p>A primeira vers\u00e3o do HTTP (0.9) permitia apenas que fossem recebidas informa\u00e7\u00f5es de um servidor apenas com a opera\u00e7\u00e3o <code>GET</code>, e a troca de informa\u00e7\u00f5es era permitida apenas no formato ASCII.</p>"},{"location":"http_lab/http/#http11","title":"HTTP/1.1","text":"<p>A vers\u00e3o 1.1 do protocolo foi lan\u00e7ada em 1997, e adicionou \u00e0 vers\u00e3o anterior (1.0) diversas extens\u00f5es, dentre as quais destacam-se, conforme apontado em Baeldung [5]:</p> <ul> <li>Cabe\u00e7alho Host:</li> <li>No HTTP 1.0, n\u00e3o era oficialmente exigido, mas no HTTP 1.1, sua inclus\u00e3o \u00e9 requerida pela especifica\u00e7\u00e3o.</li> <li>Importante para rotear mensagens por servidores proxy, permitindo distinguir dom\u00ednios que compartilham o mesmo IP.</li> <li>Conex\u00f5es Persistentes:</li> <li>No HTTP 1.0, cada par de requisi\u00e7\u00e3o/resposta requer a abertura de uma nova conex\u00e3o.</li> <li>No HTTP 1.1, \u00e9 poss\u00edvel executar v\u00e1rias requisi\u00e7\u00f5es usando uma \u00fanica conex\u00e3o.</li> <li>Status de Continue:</li> <li>Introduzido para evitar que servidores recusem requisi\u00e7\u00f5es invi\u00e1veis.</li> <li>Os clientes podem enviar apenas os cabe\u00e7alhos da requisi\u00e7\u00e3o primeiro e verificar se recebem um c\u00f3digo de status de Continue (100).</li> <li>Novos M\u00e9todos:</li> <li>Al\u00e9m dos m\u00e9todos j\u00e1 dispon\u00edveis no HTTP 1.0, a vers\u00e3o 1.1 adicionou seis m\u00e9todos extras: PUT, PATCH, DELETE, CONNECT, TRACE e OPTIONS.</li> <li>Outras Melhorias Introduzidas na Vers\u00e3o 1.1 do HTTP:</li> <li>Compress\u00e3o e Descompress\u00e3o.</li> <li>Suporte a V\u00e1rios Idiomas.</li> <li>Transfer\u00eancias de Intervalo de Bytes.</li> </ul>"},{"location":"http_lab/http/#http2","title":"HTTP/2","text":"<p>A vers\u00e3o 2 do protocolo foi lan\u00e7ada em 2015, e teve como principal foco a melhora no desempenho do protocolo, principalmente por torn\u00e1-lo um protocolo bin\u00e1rio, no qual os dados trafegam na forma bin\u00e1ria para diminuir o overhead. As principais altera\u00e7\u00f5es, conforme apontado em Baeldung [5], foram:</p> <ul> <li>Multiplexa\u00e7\u00e3o de Requisi\u00e7\u00f5es:</li> <li> <p>O HTTP 1.1 \u00e9 um protocolo sequencial, permitindo enviar apenas uma requisi\u00e7\u00e3o por vez, j\u00e1 no HTTP 2.0, \u00e9 poss\u00edvel enviar requisi\u00e7\u00f5es e receber respostas de forma ass\u00edncrona, permitindo v\u00e1rias requisi\u00e7\u00f5es simult\u00e2neas usando uma \u00fanica conex\u00e3o.</p> </li> <li> <p>Prioriza\u00e7\u00e3o de Requisi\u00e7\u00f5es:</p> </li> <li> <p>No HTTP 2.0, \u00e9 poss\u00edvel atribuir uma prioriza\u00e7\u00e3o num\u00e9rica a um conjunto de requisi\u00e7\u00f5es, o que permite explicitar a ordem desejada para as respostas, como obter o CSS de uma p\u00e1gina da web antes de seus arquivos JS.</p> </li> <li> <p>Compress\u00e3o Autom\u00e1tica:</p> </li> <li> <p>Ao contr\u00e1rio do HTTP 1.1, onde a compress\u00e3o de requisi\u00e7\u00f5es e respostas deve ser explicitamente solicitada, o HTTP 2.0 realiza automaticamente a compress\u00e3o com GZip.</p> </li> <li> <p>Reset de Conex\u00e3o:</p> </li> <li> <p>Permite fechar uma conex\u00e3o entre servidor e cliente por algum motivo, abrindo imediatamente uma nova.</p> </li> <li> <p>Server Push:</p> </li> <li>Introduz uma funcionalidade para evitar que o servidor receba muitas requisi\u00e7\u00f5es, de forma que o servidor tenta prever os recursos que ser\u00e3o solicitados em breve e proativamente envia esses recursos para o cache do cliente.</li> </ul>"},{"location":"http_lab/http/#http3","title":"HTTP/3","text":"<p>Ao contr\u00e1rio das vers\u00f5es anteriores, que eram documentos do IETF (Internet Engineering Task Force) conhecidos como RFC (Request For Comments), o HTTP 3.0 \u00e9 um Internet-Draft. O primeiro rascunho foi publicado em 2020. As inova\u00e7\u00f5es fornecidas nessa \u00faltima altera\u00e7\u00e3o visam aumentar a seguran\u00e7a por meio de criptografia, como o fato de o HTTP 3.0 sempre criar conex\u00f5es criptografadas, o que se assemelha \u00e0 pr\u00e1tica de sempre usar HTTPS na atual vers\u00e3o HTTP 2.0.</p> <p>O principal diferencial entre HTTP 2.0 e HTTP 3.0 reside no protocolo de transporte utilizado, o HTTP 2.0 emprega conex\u00f5es TCP, com ou sem TLS (para HTTPS e HTTP) enquanto o HTTP 3.0, por sua vez, \u00e9 projetado sobre o protocolo QUIC (Quick UDP Internet Connections) -  um protocolo de camada de transporte com multiplexa\u00e7\u00e3o nativa e criptografia integrada, ele oferece um processo de handshake r\u00e1pido e \u00e9 capaz de mitigar problemas de lat\u00eancia em conex\u00f5es com perda de pacotes e baixa velocidade. A utiliza\u00e7\u00e3o do QUIC traz benef\u00edcios potenciais, como uma r\u00e1pida negocia\u00e7\u00e3o de conex\u00e3o e efici\u00eancia na mitiga\u00e7\u00e3o de lat\u00eancia em conex\u00f5es problem\u00e1ticas.</p>"},{"location":"http_lab/http/#pratica","title":"Pr\u00e1tica","text":"<p>O experimento ser\u00e1 realizado com dois containers docker, sendo uma imagem de nginx usada para o lado servidor e uma de linux (debian) para o lado cliente.</p>"},{"location":"http_lab/http/#configuracao-do-ambiente","title":"Configura\u00e7\u00e3o do Ambiente","text":""},{"location":"http_lab/http/#orquestracao-dos-servicos","title":"Orquestra\u00e7\u00e3o dos servi\u00e7os","text":"docker-compose.yml<pre><code>version: \"3\"\nservices:\n  # Servidor, respons\u00e1vel por servir conte\u00fado est\u00e1tico.\n  nginx: # O nome do servi\u00e7o serve como DNS para acessar o servi\u00e7o, com http://nginx ou https://nginx\n    container_name: nginx\n    build:\n      context: .\n      dockerfile: nginx.Dockerfile\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n    networks:\n      - net-http-lab\n\n  debian:\n    container_name: debian\n    build:\n      context: .\n      dockerfile: debian.Dockerfile\n    entrypoint: /bin/bash /tmp/get_http\n    depends_on:\n      - nginx\n    volumes:\n      - ./get_http:/tmp/get_http      \n    networks:\n      - net-http-lab\n\nnetworks:\n  net-http-lab:\n    name: net-redes\n</code></pre>"},{"location":"http_lab/http/#configuracoes-do-servidor-nginx","title":"Configura\u00e7\u00f5es do servidor (Nginx)","text":"nginx.Dockerfile<pre><code>FROM nginx:latest\n\n\nCOPY nginx.conf /etc/nginx/conf.d/\n\n# Gera um certificado ssl para testes, para acesso \u00e0s p\u00e1ginas via https.\nRUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/nginx/conf.d/mock.key \\\n    -out /etc/nginx/conf.d/mock.crt -subj \"/CN=localhost\"\n\nEXPOSE 80\nEXPOSE 443\n</code></pre> nginx.conf<pre><code>events{} \nhttp {\nserver {\n    listen 80;\n    server_name localhost;\n\n    location / {\n        return 200 \"Hello World! Esse conte\u00fado foi requisitado via HTTP/1.1\";\n    }\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name localhost;\n\n    ssl_certificate /etc/nginx/conf.d/mock.crt;\n    ssl_certificate_key /etc/nginx/conf.d/mock.key;\n\n    location / {\n        return 200 \"Hello World! Esse conte\u00fado foi requisitado via HTTP/2\";\n    }\n}\n\n}\n</code></pre>"},{"location":"http_lab/http/#configuracoes-do-cliente-debian","title":"Configura\u00e7\u00f5es do cliente (debian)","text":"debian.Dockerfile<pre><code>FROM debian:latest\n\n# Instala as depend\u00eancias para buildar o curl para os testes (\u00faltima vers\u00e3o para usar o http3)\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    build-essential libpcre3-dev zlib1g-dev libssl-dev wget checkinstall \\\n    libcurl4-openssl-dev \\\n    nghttp2 libnghttp2-dev\n\nRUN mkdir -p /tmp/curl_compile\nWORKDIR /tmp/curl_compile\n\nRUN wget https://curl.se/download/curl-7.80.0.tar.gz  &amp;&amp; \\ \n    tar -xzvf curl-7.80.0.tar.gz &amp;&amp; cd curl-7.80.0 &amp;&amp; \\\n    /bin/bash ./configure --with-ssl --with-nghttp2 --enable-ssl --enable-http2 --with-quiche \\\n    &amp;&amp;  make clean &amp;&amp;  make  &amp;&amp;  make install \n</code></pre> <p>O seguinte script ser\u00e1 executado no in\u00edcio do container, para realizar as conex\u00f5es ao servidor utilizando as vers\u00f5es especificadas do protocolo HTTP.</p> get_http<pre><code>#!/bin/bash\n\n# Curl flags: --include: Inclui o header da resposta na sa\u00edda.\ncmd=\"curl --include --http1.1 -X GET http://nginx\"\necho \"Testando HTTP/1.1 com o comando curl ($cmd):\"\nresultado=\"$($cmd)\"\necho -e \"Resultado:\\n$resultado\\n\"\n\n\n# A flag --insecure \u00e9 passada para que o curl n\u00e3o verifique os certificados ssl (o usado \u00e9 self-signed).\ncmd=\"curl --include --http2 -X GET --insecure https://nginx\"\necho \"Testando HTTP/2 com o comando curl ($cmd):\"\nresultado=\"$($cmd)\"\necho -e \"Resultado:\\n$resultado\\n\"\n\ncmd=\"curl --include --http3 -X GET --insecure https://nginx\"\necho \"Testando HTTP/3 com o comando curl ($cmd):\"\nresultado=\"$($cmd)\"\necho -e \"Resultado:\\n$resultado\\n\"\n</code></pre>"},{"location":"http_lab/http/#execucao","title":"Execu\u00e7\u00e3o","text":"<p>Para executar o experimento, basta executar o comando a seguir na pasta onde encontram-se os arquivos de configura\u00e7\u00e3o:</p> <pre><code># A flag -d indica que os containers rodaram em modo detached do terminal.\ndocker compose up -d \n</code></pre> <p>Para verificar os resultados do experimento, verifique os logs do container do cliente, rodando o comando:</p> <pre><code>docker logs debian \n</code></pre>"},{"location":"http_lab/http/#resultados","title":"Resultados","text":""},{"location":"http_lab/http/#http11_1","title":"HTTP/1.1","text":"<pre><code>Testando HTTP/1.1 com o comando curl (curl --include --http1.1 -X GET http://nginx):\nResultado:\nHTTP/1.1 200 OK\nServer: nginx/1.25.3\nDate: Mon, 20 Nov 2023 15:50:37 GMT\nContent-Type: text/plain\nContent-Length: 56\nConnection: keep-alive\n\nHello World! Esse conte\u00fado foi requisitado via HTTP/1.1\n</code></pre>"},{"location":"http_lab/http/#http2_1","title":"HTTP/2","text":"<pre><code>Testando HTTP/2 com o comando curl (curl --include --http2 -X GET --insecure https://nginx):\nResultado:\nHTTP/2 200 \nserver: nginx/1.25.3\ndate: Mon, 20 Nov 2023 15:50:37 GMT\ncontent-type: text/plain\ncontent-length: 54\n\nHello World! Esse conte\u00fado foi requisitado via HTTP/2\n</code></pre>"},{"location":"http_lab/http/#http3_1","title":"HTTP/3","text":"<pre><code>Testando HTTP/3 com o comando curl (curl --include --http3 -X GET --insecure &lt;https://nginx&gt;):\nResultado:\n\ncurl: option --http3: the installed libcurl version doesn't support this\ncurl: try 'curl --help' for more information\n</code></pre> <p>Houve um erro, pois a vers\u00e3o utilizada do curl n\u00e3o tem suporte \u00e0 http3.</p>"},{"location":"http_lab/http/#consideracoes-finais","title":"Considera\u00e7\u00f5es Finais","text":"<p>A seguinte tabela destaca algumas das principais diferen\u00e7as entre as vers\u00f5es HTTP/1.1, HTTP/2.0 e HTTP/3.0 em rela\u00e7\u00e3o a diversos aspectos, desde o ano de lan\u00e7amento at\u00e9 caracter\u00edsticas espec\u00edficas de cada protocolo.</p> Caracter\u00edstica HTTP/1.1 HTTP/2.0 HTTP/3.0 Ano de Lan\u00e7amento 1997 2015 2020 Tipo de Documento RFC (Request For Comments) RFC Internet-Draft Protocolo de Transporte TCP (com ou sem TLS para HTTPS) TCP (com ou sem TLS para HTTPS) QUIC Multiplexa\u00e7\u00e3o de Requisi\u00e7\u00f5es N\u00e3o suporta; sequencial Sim; ass\u00edncrono Sim; ass\u00edncrono Prioriza\u00e7\u00e3o de Requisi\u00e7\u00f5es N\u00e3o suporta Sim Sim Compress\u00e3o Autom\u00e1tica N\u00e3o Sim Sim Conex\u00f5es Persistentes Poss\u00edveis, mas com limita\u00e7\u00f5es Sim Sim Seguran\u00e7a da Conex\u00e3o Requer explicitamente (HTTP) ou por padr\u00e3o (HTTPS) Requer explicitamente (HTTP) ou por padr\u00e3o (HTTPS) Sempre criptografada Protocolo Bin\u00e1rio N\u00e3o Sim Sim Multiplexa\u00e7\u00e3o de Streams N\u00e3o aplic\u00e1vel Sim Sim Cria\u00e7\u00e3o de Conex\u00f5es Sem funcionalidade espec\u00edfica Requer handshake R\u00e1pida negocia\u00e7\u00e3o de conex\u00e3o (QUIC) Server Push N\u00e3o suporta Sim Sim (atrav\u00e9s do QUIC) Projeto de Tim Berners-Lee N\u00e3o previu inicialmente como um meio somente leitura Estendido para permitir autoria (WebDAV) Projeto inicial inclu\u00eda autoria (WebDAV) Principais Objetivos Iniciais Transfer\u00eancia de documentos hipertexto Melhorias de desempenho e otimiza\u00e7\u00e3o Aprimoramentos de desempenho e seguran\u00e7a (QUIC) <p> Comparativo entre vers\u00f5es do HTTP. </p> <p>A execu\u00e7\u00e3o do laborat\u00f3rio mostrou as possibilidades de utilizar diferentes vers\u00f5es do protocolo HTTP entre cliente e servidor, mas n\u00e3o foi poss\u00edvel testar a vers\u00e3o HTTP/3.</p>"},{"location":"http_lab/http/#referencias","title":"Refer\u00eancias","text":"<p>[1] FreeCodeCamp. An Introduction to HTTP: Understanding the Open Systems Interconnection Model. Dispon\u00edvel em: https://www.freecodecamp.org/news/an-introduction-to-http-understanding-the-open-systems-interconnection-model-9dd06233d30e/. Acesso em: 20/11/2023.  [2] Mozilla Developer Network (MDN). Client-Server Overview. Dispon\u00edvel em: https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview. Acesso em: 20/11/2023.  [3] TANENBAUM, Andrew S.; WETHERALL, David J. Computer Networks. 5th ed. [Local de Publica\u00e7\u00e3o]: Editora, Ano.  [4] Mozilla Developer Network (MDN). HTTP Basics: Evolution of HTTP. Dispon\u00edvel em: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP. Acesso em: 20/11/2023.  [5] Baeldung. HTTP Versions. Dispon\u00edvel em: https://www.baeldung.com/cs/http-versions. Acesso em: 20/11/2023.  [6] World Wide Web Consortium (W3C). History of the World Wide Web. Dispon\u00edvel em: https://www.w3.org/Protocols/History.html. Acesso em: 20/11/2023.  [7] IBM. CICS Transaction Server for z/OS. Dispon\u00edvel em: https://www.ibm.com/docs/en/cics-ts/5.3?topic=concepts-http-protocol. Acesso em: 20/11/2023.  [8] TCP/IP Guide. HTTP Overview, History, Versions, and Standards. Dispon\u00edvel em: http://www.tcpipguide.com/free/t_HTTPOverviewHistoryVersionsandStandards.htm. Acesso em: 20/11/2023.  [9] NGINX. HTTP Keepalive Connections and Web Performance. Dispon\u00edvel em: https://www.nginx.com/resources/wiki/start/topics/examples/full/. Acesso em: 20/11/2023. </p>"},{"location":"p2/gabarito/","title":"Gabarito","text":"<p>011 011111 11111 11111 1 0010  011 01111 011111 1 011111  01 0 01 0  011 01111 0111 011 011111  01 0 01 0  011 011111 011111  011111  01 0 01 0  011 011111 01111 011111 1 01 0010</p>"},{"location":"p2/lista2/","title":"Lista 2","text":""},{"location":"p2/lista2/#questao-1","title":"Quest\u00e3o 1","text":"<p>Com base no c\u00f3digo a seguir, analise as quest\u00f5es apresentadas e marque a alternativa CORRETA:</p> <p></p> <p>I) Para que os dois clientes possam acessar o servidor simultaneamente, ser\u00e1 necess\u00e1rio que o servidor instancie dois processos filhos para atender essas conex\u00f5es. Do contr\u00e1rio, um dos clientes ficar\u00e1 aguardando at\u00e9 que o outro termine o di\u00e1logo iniciado.</p> <p>II) Para viabilizar c\u00f3digo full-duplex nesse c\u00f3digo entre o servidor e dois ou mais clientes, uma das modifica\u00e7\u00f5es poss\u00edveis no c\u00f3digo do servidor, seria o uso da system call select() necessariamente associado a um mecanismo de instancia\u00e7\u00e3o do processo servidor (com uso de fork ou cria\u00e7\u00e3o de threads filha) para atender cada um dos clientes que solicitou a conex\u00e3o.</p> <p>III) Se alter\u00e1ssemos o c\u00f3digo do cliente retirando tanto o preenchimento da struct cliAddr o c\u00f3digo apresentado continuaria funcionando</p> <p>a. Apenas a afirma\u00e7\u00e3o II \u00e9 correta b. Apenas as afirma\u00e7\u00f5es II e III s\u00e3o corretas c. Apenas a afirma\u00e7\u00e3o III est\u00e1 correta d. Todas afirma\u00e7\u00f5es est\u00e3o corretas e. Apenas a afirma\u00e7\u00e3o I \u00e9 correta</p>"},{"location":"p2/lista2/#questao-2","title":"Quest\u00e3o 2","text":"<p>Em quest\u00e3o de minutos, uma onda gigantesca de acessos tirou do ar o Yahoo!. O m\u00e9todo usado no ataque pode ser entendido por meio de uma analogia. \u00c9 como se voc\u00ea desse tanto trabalho para uma pessoa fazer que ela pararia tudo o que estivesse fazendo para ficar apenas 'anotando os seus pedidos, sem prestar aten\u00e7\u00e3o a mais ningu\u00e9m'.</p> <p>De acordo com o texto acima, \u00e9 correto afirmar que o site do Yahoo! sofreu uma ataque que afetou o seu servi\u00e7o de:</p> <p>Escolha uma op\u00e7\u00e3o:</p> <p>a. Confidencialidade; b. Disponibilidade; c. Integridade; d. Controle de Acesso. e. Autenticidade;</p>"},{"location":"p2/lista2/#questao-3","title":"Quest\u00e3o 3","text":"<p>Analise as quest\u00f5es e marque a alternativa CORRETA:</p> <p></p> <p>a. Se a m\u00e1quina X n\u00e3o contivesse sistema operacional, poderia requisit\u00e1-lo de um servidor presente na Internet por meio do protocolo ARP b. Na configura\u00e7\u00e3o do desenho, um pacote IP com TTL=3 saindo de X n\u00e3o conseguir\u00e1 alcan\u00e7ar a m\u00e1quina Z. c. Nenhuma das alternativas apresentada \u00e9 correta e. Na configura\u00e7\u00e3o do desenho, basta um \u00fanico servidor DHCP para atender a rede toda (supor que n\u00e3o existe relay de DHCP - repassador de mensagens DHCP entre roteadores).</p> <p>Coment\u00e1rios: O servi\u00e7o DHCP \u00e9 baseado em endere\u00e7os MAC e, por isso, o servi\u00e7o n\u00e3o \u00e9 rote\u00e1vel naturalmente. Por outro lado, se o servi\u00e7o DHCP estiver no roteador R, ele s\u00f3 consegue atribuir endere\u00e7os (de redes distintas) para as redes locais (i) e (ii) e o mesmo ocorre com o roteador S, visualizando apenas as redes (ii) e (iii). Portanto, na configura\u00e7\u00e3o apresentada seriam necess\u00e1rios pelo menos dois servidores DHCP para atender os tr\u00eas segmentos de rede local. Se Z for configurado com um IP v\u00e1lido e n\u00e3o-privado, n\u00e3o ser\u00e1 preciso utilizar NAT. Al\u00e9m disso, mesmo que Z tenha IP privado, o NAT pode ser instalado no host\u00a0 S.</p>"},{"location":"p2/lista2/#questao-4","title":"Quest\u00e3o 4","text":"<p>Folha de S\u00e3o Paulo - 14/02/2008 - 11h33 Petrobras confirma furto de informa\u00e7\u00f5es sigilosas</p> <p>\"A Petrobras confirmou nesta quinta-feira que dados sobre pesquisas s\u00edsmicas, que podem incluir a descoberta de petr\u00f3leo e g\u00e1s, foram furtados de um cont\u00eainer da empresa. Segundo a estatal, as informa\u00e7\u00f5es eram sigilosas e relevantes. A Petrobras informou apenas que o furto foi feito de uma empresa terceirizada prestadora de servi\u00e7os, mas n\u00e3o citou nomes. Segundo fontes ouvidas pela Folha Online, o cont\u00eainer era transportado pela norte-americana Halliburton.</p> <p>Segundo a Petrobras, o furto ocorreu no in\u00edcio deste m\u00eas e a investiga\u00e7\u00e3o est\u00e1 sob sigilo. Uma miss\u00e3o especial da Pol\u00edcia Federal no Rio, em conex\u00e3o direta com o comando da PF em Bras\u00edlia, estaria no caso.</p> <p>Na ocasi\u00e3o do crime, o cont\u00eainer da Halliburton se dirigia a Maca\u00e9 (RJ), rumo \u00e0 base de opera\u00e7\u00f5es da estatal na Bacia de Campos, transportando equipamentos, quando ocorreu o furto dos dados, que estariam em um disco r\u00edgido e computadores port\u00e1teis.</p> <p>A estatal n\u00e3o informou detalhes sobre o conte\u00fado dos dados roubados, nem se continham n\u00fameros sobre o megacampo de Tupi, na Bacia de Santos. A Petrobras tamb\u00e9m evitou comentar detalhes do furto, mas disse que possui c\u00f3pias das informa\u00e7\u00f5es.\"</p> <p>De acordo com o texto acima, marque a op\u00e7\u00e3o correta.</p> <p>Escolha uma op\u00e7\u00e3o:</p> <p>a. Pelo texto acima, fica claro que os computadores port\u00e1teis da Petrobr\u00e1s permitem o acesso de pessoas n\u00e3o autorizadas. b. De acordo com o exposto, pode-se concluir que o transporte dos equipamentos da Petrobr\u00e1s n\u00e3o apresenta vulnerabilidades. c. A integridade dos dados das pesquisas feitas pela Petrobr\u00e1s foi atingida neste roubo. d. O roubo das informa\u00e7\u00f5es caracterizou um ataque ao servi\u00e7o de disponibilidade da Petrobr\u00e1s. e. Uma forma da Petrobr\u00e1s garantir a confidencialidade dos dados, seria a utiliza\u00e7\u00e3o de mecanismos de criptografia.</p>"},{"location":"p2/lista2/#questao-5","title":"Quest\u00e3o 5","text":"<p>Considere a configura\u00e7\u00e3o de rede a seguir, considerando a quantidade de equipamentos assinalada na figura para cada segmento de rede:</p> <p></p> <p>Assumindo um endere\u00e7o de rede classe C que deve ser utilizado para endere\u00e7ar todos os hosts dessa rede, analise os itens apresentados a seguir e marque a resposta correta:</p> <p>a. Nenhuma das alternativas apresentadas \u00e9 correta c. A fim de minimizar o desperd\u00edcio de endere\u00e7os, \u00e9 poss\u00edvel utilizar uma faixa de endere\u00e7os sequencial para as interfaces de rede dos equipamentos R, S e W d. A m\u00e1scara de sub-rede 255.255.255.224 aplicada ao segmento de rede #1 ser\u00e1 suficiente para mapear todos os endere\u00e7os dessa rede e. Considerando desperd\u00edcio m\u00ednimo de endere\u00e7os em cada sub-rede, a m\u00e1scara adequada para a rede #2 desperdi\u00e7ar\u00e1 mais endere\u00e7os do que a rede #3</p> <p>Coment\u00e1rios: Nesse segmento h\u00e1 32 hosts e a m\u00e1scara 255.255.255.224 consegue mapear apenas 30 endere\u00e7os para os hosts. Nesse caso, uma m\u00e1scara 255.255.255.192 resolveria.</p>"},{"location":"p2/lista2/#questao-6","title":"Quest\u00e3o 6","text":"<p>Analise as afirmativas abaixo e, em seguida, marque a alternativa correta.</p> <p>I) Pacotes IP possuem \u00e1rea de dados e de payload vari\u00e1vel, podendo o conjunto todo chegar at\u00e9 o limite de 16K.</p> <p>II) Numa rede IP, se um host A enviar um pacote IP para um host B, esse pacote ter\u00e1 o campo de CheckSum recalculado por cada roteador intermedi\u00e1rio por onde o pacote passar, mesmo que a \u00e1rea de dados do pacote n\u00e3o tenha sido alterada ao longo do caminho.</p> <p>III) Um determinado host que possua uma interface de rede configurada com endere\u00e7o 127.0.0.1 pode ser acessado (por telnet ou pacotes ICMP) por um outro host (computador remoto), com IP 127.0.0.2. Isso ocorre assumindo que a tabela de rotas est\u00e1 correta e ambos est\u00e3o utilizando o mesmo endere\u00e7o Classe A.</p> <p>a. Apenas a alternativa II) est\u00e1 correta</p> <p>b. As alternativas I) e II) est\u00e3o corretas</p> <p>c. As alternativas II) e III) est\u00e3o corretas</p> <p>d. As alternativas I) e III) est\u00e3o corretas</p> <p>e. Apenas a alternativa III) est\u00e1 correta</p> <p>Coment\u00e1rios:</p> <p>(i) Falso. Pacotes IP possuem \u00e1rea de dados e de payload vari\u00e1vel, mas o conjunto todo pode chegar a 64K, uma vez que o campo Total Lenght do cabe\u00e7alho tem 16 bits (2\u02c616 =64K) (ii) Verdadeiro. Numa rede IP, os pacotes tem o seu cabe\u00e7alho alterado por rotinas de controle. Por exemplo, o campo TTL (Time to Live) \u00e9 decrementado a cada salto que o pacote sofre e essa altera\u00e7\u00e3o exige que o campo Header CheckSum seja recalculado a cada roteador intermedi\u00e1rio. (iii) Falso. Em redes IP, a faixa 127.0.0.0 \u00e9 um endere\u00e7o Classe A alocado para loopback, ou seja, os IPs dessa faixa s\u00e3o utilizados apenas para conex\u00f5es IP internas ao host e n\u00e3o para comunica\u00e7\u00e3o entre hosts.</p>"},{"location":"p2/lista2/#questao-7","title":"Quest\u00e3o 7","text":"<p>Analise as afirma\u00e7\u00f5es abaixo e, a seguir, marque a alternativa correta</p> <p>I) O bit URG \u00e9 suficiente para garantir o envio de dados urgentes entre entidades TCP</p> <p>II) No TCP/IP, a API-Socket pode ser considerada uma forma de facilitar o acesso \u00e0s funcionalidades dos protocolos da camada de transporte (TCP e UDP)</p> <p>III) O segmento TCP tem cabe\u00e7alho de tamanho vari\u00e1vel e payload de tamanho fixo</p> <p>a. Apenas III) \u00e9 falsa</p> <p>b. Apenas II) e III) s\u00e3o falsas</p> <p>c. Apenas II) \u00e9 falsa</p> <p>d. Apenas I) e III) s\u00e3o falsas</p> <p>e. Apenas I) \u00e9 falsa</p> <p>Coment\u00e1rios: (i) Falso. O bit URG precisa ser utilizado em conjunto com o campo Urgent Pointer do cabe\u00e7alho TCP para garantir a correta identifica\u00e7\u00e3o da posi\u00e7\u00e3o onde come\u00e7am os dados urgentes a serem interpretados pelo destinat\u00e1rio. (ii) Verdadeiro (iii) Falso. Os campos IHL e Total length informam os tamanhos do cabe\u00e7alho e do segmento TCP, dando a entender que tanto o cabe\u00e7alho quanto o payload s\u00e3o de tamanho vari\u00e1vel.</p>"},{"location":"p2/lista2/#questao-8","title":"Quest\u00e3o 8","text":"<p>Sobre criptografia, marque a alternativa correta:</p> <p>Escolha uma op\u00e7\u00e3o:</p> <p>a. Decripta\u00e7\u00e3o \u00e9 a codifica\u00e7\u00e3o dos dados, gerando um criptograma. b. Existem regras de projeto claras para facilitar a vida dos projetistas de algoritmos de criptografia. c. Na esteganografia troca-se a posi\u00e7\u00e3o dos caracteres na mensagem. d. Para melhor seguran\u00e7a, \u00e9 importante que a l\u00f3gica do algoritmo n\u00e3o seja divulgada. e. Criptoan\u00e1lise \u00e9 o estudo de meios para \"quebrar\" um algoritmo de criptografia ou criptograma.</p>"},{"location":"p2/lista2/#questao-9-aberta","title":"Quest\u00e3o 9 (Aberta)","text":"<p>Explique como funcionam os protocolos IMAP, POP e SMTP para o servi\u00e7o de e-mails. Na explica\u00e7\u00e3o, descrever a rela\u00e7\u00e3o entre esses protocolos, caso exista</p>"},{"location":"p2/lista2/#questao-10","title":"Quest\u00e3o 10","text":"<p>Sobre a camada de transporte, analise as afirma\u00e7\u00f5es abaixo e escolha a alternativa CORRETA.</p> <p>I) A desconex\u00e3o UDP \u00e9 assim\u00e9trica, ou seja, ocorre de modo que basta apenas um dos lados se desconectar, para que a desconex\u00e3o seja garantida</p> <p>II) No UDP, uma solu\u00e7\u00e3o para envio r\u00e1pido de dados entre as partes comunicantes com uso de algoritmos como a Solu\u00e7\u00e3o de Clark e o Algoritmo de Nagle</p> <p>III) Um dos problemas da camada de transporte \u00e9 que ela n\u00e3o consegue associar v\u00e1rias conex\u00f5es de transporte numa \u00fanica conex\u00e3o de rede e nem fazer uma \u00fanica conex\u00e3o de transporte em v\u00e1rias conex\u00f5es de rede.</p> <p>a. Apenas I e III est\u00e3o incorretas b. Apenas II e III est\u00e3o corretas c. Apenas a alternativas III\u00a0 est\u00e1 correta d. Todas est\u00e3o incorretas e. Apenas I e II est\u00e3o corretas</p>"},{"location":"p2/lista2/#questao-11","title":"Quest\u00e3o 11","text":"<p>Sobre a camada de transporte, analise as afirma\u00e7\u00f5es abaixo e escolha a alternativa CORRETA.</p> <p>I) O TCP usa a medida de RTT (Round Trip Time) para computar os timeouts de uma conex\u00e3o. Esse mecanismo ocorre, porque o tempo de espera de reconhecimentos \u00e9 vari\u00e1vel ao longo de uma conex\u00e3o</p> <p>II) O TCP possui mecanismos para reserva de buffers no lado receptor da conex\u00e3o, a fim de viabilizar o envio de segmentos da janela deslizante</p> <p>III) No TCP, o envio de um \u00fanico byte de dados (1 caractere) implica num overhead de 40 bytes de cabe\u00e7alho, considerando os cabe\u00e7alhos TCP e IP.</p> <p>a. Todas est\u00e3o corretas b. Apenas I e II est\u00e3o corretas c. Apenas II e III est\u00e3o corretas d. Apenas I est\u00e1 correta e. Apenas I e III est\u00e3o corretas</p>"},{"location":"p2/lista2/#questao-12","title":"Quest\u00e3o 12","text":"<p>Considere a seguinte topologia, cujos equipamentos s\u00e3o atualizados por algoritmos de roteamento din\u00e2mico:</p> <p></p> <p>Suponha que tais equipamentos estejam configurados com o protocolo  RIP\u00a0(distance vector) e que, num determinado momento, os seguintes vetores chegaram ao roteador C:</p> <p></p> <p>Com base nessas informa\u00e7\u00f5es, responda a alternativa correta em rela\u00e7\u00e3o \u00e0 nova tabela de rotas do equipamento C (contendo os novos atrasos em rela\u00e7\u00e3o aos roteadores):</p> <p>a. Para chegar em F, o caminho a ser percorrido \u00e9 CEF b. O atraso de C em rela\u00e7\u00e3o a B \u00e9 menor que o atraso de C em rela\u00e7\u00e3o a F c. A diferen\u00e7a dos atrasos de C em rela\u00e7\u00e3o \u00e0 A e B \u00e9 igual a 3 d. A soma dos atrasos dos vizinhos em rela\u00e7\u00e3o a D \u00e9 superior a 20 e. Nenhuma das alternativas apresentadas \u00e9 correta</p> <p>Coment\u00e1rios: O caminho correto \u00e9 CDF. A soma dos atrasos dos vizinhos \u00e9 igual a 30 (8+6; 5+0; 7+4)</p>"},{"location":"p2/lista2/#questao-13","title":"Quest\u00e3o 13","text":"<p>De acordo com as caracter\u00edsticas do algoritmo DES, analise as afirma\u00e7\u00f5es abaixo e assinale a op\u00e7\u00e3o correta.</p> <p>I) As tabelas de permuta\u00e7\u00e3o (P-boxes) s\u00e3o utilizadas para se fazer transposi\u00e7\u00f5es entre os bits de um bloco, onde algumas delas s\u00e3o voltadas para expans\u00e3o e outras utilizadas para se fazer contra\u00e7\u00e3o.</p> <p>II) Apesar da chave ser 64 bits, apenas 56 deles s\u00e3o utilizados e ela n\u00e3o sofre mudan\u00e7as durante todo o processo de encripta\u00e7\u00e3o.</p> <p>III) Em cada uma das 16 rodadas do algoritmo, a chave sofre uma adi\u00e7\u00e3o de 1 ou 2 bits, dependendo da rodada.</p> <p>Escolha uma op\u00e7\u00e3o:</p> <p>a. Somente I e III s\u00e3o verdadeiras. b. Todas as afirma\u00e7\u00f5es s\u00e3o verdadeiras. c. Todas as afirma\u00e7\u00f5es s\u00e3o falsas. d. Somente II \u00e9 verdadeira. e. Somente II e III s\u00e3o falsas.</p>"},{"location":"p2/lista2/#questao-14","title":"Quest\u00e3o 14","text":"<p>Podemos dizer que a integridade est\u00e1 comprometida na seguinte situa\u00e7\u00e3o:</p> <p>Escolha uma op\u00e7\u00e3o:</p> <p>a. Desativa\u00e7\u00e3o de um sistema de arquivos. b. An\u00e1lise de tr\u00e1fego de uma rede por meio de um sniffer; c. Interrup\u00e7\u00e3o de uma rede por causa de uma inunda\u00e7\u00e3o de tr\u00e1fego que degradou seu desempenho; d. Captura e acesso a um arquivo transferido via rede entre um cliente e um servidor; e. Altera\u00e7\u00e3o de partes de uma mensagem leg\u00edtima; Obter o aplicativo para dispositivos m\u00f3veis</p>"},{"location":"p2/lista2/#questao-4_1","title":"Quest\u00e3o 4","text":"<p>Considere um grupo de N pessoas que se comunicam entre si usando Criptografia sim\u00e9trica. Todas as comunica\u00e7\u00f5es entre quaisquer duas pessoas do grupo tamb\u00e9m s\u00e3o vis\u00edveis para as demais. Nenhuma outra pessoa fora deste grupo pode decriptar as mensagens trocadas. Com base nisto, analise as afirma\u00e7\u00f5es abaixo e marque a alternativa correta.</p> <p>I) O sistema como um todo requer o uso de apenas duas chaves. II) Se a Criptografia utilizada fosse assim\u00e9trica, seriam necess\u00e1rios N pares de chaves (p\u00fablica e privada). III) Neste sistema n\u00e3o h\u00e1 problema com a distribui\u00e7\u00e3o das chaves, j\u00e1 que as pessoas s\u00e3o conhecidas.</p> <p>Escolha uma op\u00e7\u00e3o:</p> <p>a. Somente I e II s\u00e3o falsas. b. Todas as afirma\u00e7\u00f5es s\u00e3o verdadeiras. c. Somente II e III s\u00e3o falsas. d. Todas as afirma\u00e7\u00f5es s\u00e3o falsas. e. Somente I e III s\u00e3o falsas.</p>"},{"location":"p2/lista2/#questao-8_1","title":"Quest\u00e3o 8","text":"<p>Marca\u00e7\u00e3o de caractere, uso de tinta invis\u00edvel, perfura\u00e7\u00f5es, fita corretiva de m\u00e1quina de escrever, entre outras t\u00e9cnicas caracterizam:</p> <p>Escolha uma op\u00e7\u00e3o:</p> <p>a. Confidencialidade. b. Integridade. c. Esteganografia. d. Criptoan\u00e1lise. e. Criptografia.</p>"},{"location":"p2/lista2/#questao-11_1","title":"Quest\u00e3o 11","text":"<p>Analise as afirma\u00e7\u00f5es abaixo e marque a alternativa correta.</p> <p>I) O formato MIME Types \u00e9 utilizado tanto em mensagens SMTP quanto WWW e permite especicar tipos de dados mais arrojados, diferente do que ocorre com o RFC822 (apenas texto). II) Servi\u00e7os HTTP podem ser configurados para atenderem na porta 90 e podem ser acessados diretamente por um cliente n\u00e3o Web (telnet, por exemplo) III) Os servi\u00e7os da camada de aplica\u00e7\u00e3o s\u00e3o baseados no modelo Peer-to-peer, ao contr\u00e1rio da camada de transporte, que \u00e9 baseada no modelo cliente-servidor</p> <p>a. Apenas I) e II) est\u00e3o corretas</p> <p>b. Apenas II) est\u00e1 correta</p> <p>c. Apenas I) e III) est\u00e3o corretas</p> <p>d. Apenas II) e III) est\u00e3o corretas</p> <p>e. Apenas I) est\u00e1 correta</p> <p>Coment\u00e1rios: (i) e (ii) Correto (iii) Servi\u00e7os da camada de aplica\u00e7\u00e3o do modelo TCP/IP s\u00e3o baseados nos modelos P2P e Cliente/servidor. Por outro lado, as inst\u00e2ncias da camada de transporte s\u00e3o entidades pares, na qual nenhuma delas assume o papel de cliente ou servidor</p>"},{"location":"p2/lista2/#questao-15-aberta","title":"Quest\u00e3o 15 (Aberta)","text":"<p>Analise a configura\u00e7\u00e3o de rede a seguir, distribua os endere\u00e7os e mostre as tabelas de rota dos equipamentos X, Y, R e W, de modo que haja conectividade (a n\u00edvel de camada IP entre todos esses equipamentos e tamb\u00e9m com a Internet). Considerar ainda, que as conex\u00f5es de R com os roteadores X, Y e Z, devem ser resolvidas com desperd\u00edcio m\u00ednimo de endere\u00e7os, da faixa 192.168.100.0 (usar m\u00e1scara de sub- rede nesses enlaces).</p> <p></p> <p>Na resposta, apresentar a tabela abaixo preenchida com endere\u00e7os de rede, m\u00e1scara e broadcast, al\u00e9m das rotas de todos os equipamentos das redes identificadas, de tal forma que essas m\u00e1quinas consigam visualizar todas as demais (do ponto de vista da camada IP) e consigam acessar a Internet. Nesse caso supor que o IP de R para Internet (linha net da tabela) \u00e9 200.0.0.1. A resposta deve ser feita nos moldes da tabela a seguir:</p> <p></p>"},{"location":"p2/lista2/#questao-2-aberta","title":"Quest\u00e3o 2 (Aberta)","text":"<p>Um aluno entra no computador do laborat\u00f3rio e digita o seguinte endere\u00e7o no browser: http://ohio.infoway.vista.edu/chamex.html. Explique como o servidor DNS do laborat\u00f3rio consegue descobrir o endere\u00e7o IP da m\u00e1quina que cont\u00e9m o arquivo chamex.html. Na resposta, apontar os hosts DNS envolvidos e explicar passo a passo como ocorre a resolu\u00e7\u00e3o de endere\u00e7os nesse caso.</p>"},{"location":"p2/lista2/#gabarito","title":"Gabarito","text":"<p>Quest\u00e3o 15 (Aberta)</p> <p></p> <p>Quest\u00e3o 2 (Aberta)</p> <p></p> <ul> <li>1 = Apenas a afirma\u00e7\u00e3o III est\u00e1 correta</li> <li>2 = Disponibilidade;</li> <li>3 = Nenhuma das alternativas apresentada \u00e9 correta.</li> <li>4 = Uma forma da Petrobr\u00e1s garantir a confidencialidade dos dados, seria a utiliza\u00e7\u00e3o de mecanismos</li> <li>5 = Considerando desperd\u00edcio m\u00ednimo de endere\u00e7os em cada sub-rede, a m\u00e1scara adequada para a rede #2 desperdi\u00e7ar\u00e1 mais endere\u00e7os do que a rede #3.</li> <li>6 = Apenas a alternativa (ii) est\u00e1 correta</li> <li>7 = Apenas (i) e (iii) s\u00e3o falsas</li> <li>8 = Criptoan\u00e1lise \u00e9 o estudo de meios para \"quebrar\" um algoritmo de criptografia ou criptograma.</li> <li>10 = Todas est\u00e3o incorretas</li> <li>11 =  Todas est\u00e3o corretas</li> <li>12 =  A soma dos atrasos dos vizinhos em rela\u00e7\u00e3o a D \u00e9 superior a 20</li> <li>13 =  Somente II e III s\u00e3o falsas.</li> <li>14 =  Altera\u00e7\u00e3o de partes de uma mensagem leg\u00edtima; Obter o aplicativo para dispositivos m\u00f3veis</li> <li>4 = Somente I e III s\u00e3o falsas.</li> <li>8 = Esteganografia.</li> <li>11 = Apenas (i) e (ii) est\u00e3o corretas E Apenas (i) e (iii) est\u00e3o corretas</li> </ul>"},{"location":"websocket_lab/relatorio/","title":"O Procolo WebSocket","text":"Identifica\u00e7\u00e3o Aluno Nicolas Chagas Souza Matr\u00edcula 200042327 Disciplina Fundamentos de Redes de Computadores Turma 01"},{"location":"websocket_lab/relatorio/#referencial-teorico","title":"Referencial Te\u00f3rico","text":""},{"location":"websocket_lab/relatorio/#socket","title":"Socket","text":"<p>Um socket fornece um meio de comunica\u00e7\u00e3o entre dois processos (Figura 1), ou seja, uma maneira para que eles possam trocar dados entre si ([1]).</p> <p></p> <p>Exemplifica\u00e7\u00e3o de socket entre duas partes comunicantes. (Fonte: Medium [1])</p> <p>Geralmente, a comunica\u00e7\u00e3o entre dois processos (<code>process A</code> e <code>process B</code>), conforme ilustra a Figura 2, \u00e9 feita pelo uso dos seus sockets (X e Y, respectivamente).</p> <p> (Fonte: Medium [1])</p> <p>Existem dois tipos principais de sockets (Figura 3):</p> <ul> <li>Unix domain sockets: permitem a comunica\u00e7\u00e3o entre processos em um mesmo computador (IPC).</li> <li>Internet domain sockets: permitem a comunica\u00e7\u00e3o entre processos em uma mesma rede.</li> </ul> <p> Diferen\u00e7a entre os tipos de socket.(Fonte: Medium [1])</p>"},{"location":"websocket_lab/relatorio/#websocket","title":"WebSocket","text":"<p>O protocolo WebSocket permite uma comunica\u00e7\u00e3o bidirecional e full-duplex entre um cliente e um servidor. Conforme a especifica\u00e7\u00e3o (RFC 6455 [2]), o protocolo permite a execu\u00e7\u00e3o de c\u00f3digo n\u00e3o confi\u00e1vel, do cliente, em um ambiente controlado em um servidor, e visa fornecer um mecanismo para aplica\u00e7\u00f5es baseadas em navegadores se comunicarem com servidores sem a necessidade de abrir m\u00faltiplas conex\u00f5es HTTP (como o uso de <code>XMLHttpRequest</code> ou <code>&lt;iframes&gt;</code>).</p> <p>O WebSocket foi constru\u00eddo sobre o protocolo TCP, e permite a comunica\u00e7\u00e3o em tempo real, composto (Figura 4) por um handshake de abertura, seguido por trocas de mensagens bidirecionais em uma conex\u00e3o persistente at\u00e9 que um dos lados finalize a conex\u00e3o.</p> <p> Comunica\u00e7\u00e3o cliente servidor via protocolo WebSocket. (Fonte: Wallarm [3])</p>"},{"location":"websocket_lab/relatorio/#websockets-vs-http","title":"WebSockets vs HTTP","text":"<p>Os WebSockets s\u00e3o ideais para estabelecer a comunica\u00e7\u00e3o entre APIs em contextos que exigem troca cont\u00ednua e/ou r\u00e1pida de dados, como aplica\u00e7\u00f5es de tempo real, jogos e aplica\u00e7\u00f5es de chats.</p> <p>Entretanto, esse protocolo n\u00e3o deve ser usado quando n\u00e3o h\u00e1 necessidade de troca de dados em tempo real ou de se manter a conex\u00e3o aberta por um longo tempo, sendo o protocolo HTTP mais adequado nesses casos (Figura 5).</p> <p> Comparativo entre os protocolos HTTP e WebSocket.(Fonte: Wallarm [3])</p>"},{"location":"websocket_lab/relatorio/#pratica","title":"Pr\u00e1tica","text":"<p>A pr\u00e1tica desenvolvida visa identificar a diferen\u00e7a de desempenho, metrificados pelo tempo de resposta, na utiliza\u00e7\u00e3o do protocolo WebSocket, em rela\u00e7\u00e3o ao HTTP, para m\u00faltiplas requisi\u00e7\u00f5es seguidas, simulando uma conversa entre o cliente e o servidor, na troca das mensagens: \"ping\" e \"pong\".</p>"},{"location":"websocket_lab/relatorio/#configuracao-do-ambiente","title":"Configura\u00e7\u00e3o do Ambiente","text":"<p>Comp\u00f5em o experimento dois processos servidores, um HTTP e um WS (WebSocket), e dois processos clientes, HTTP-Client e WS-Client. O c\u00f3digo-fonte para todos os processos foi escrito em python, com o apoio de um script shell para iniciar e configurar os servi\u00e7os.</p>"},{"location":"websocket_lab/relatorio/#configuracao-do-pipenv","title":"Configura\u00e7\u00e3o do Pipenv","text":"Pipfile<pre><code>[[source]]\nurl = \"https://pypi.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[packages]\nwebsockets = \"*\"\nwebsocket-client = \"*\"\nrequests = \"*\"\n\n[dev-packages]\n\n[requires]\npython_version = \"3.11\"\n</code></pre>"},{"location":"websocket_lab/relatorio/#rodando-o-servico","title":"Rodando o Servi\u00e7o","text":"<p>A configura\u00e7\u00e3o do ambiente \u00e9 feita automaticamente pelo script <code>start</code>, desde que o <code>pipenv</code> esteja instalado na m\u00e1quina. Para rod\u00e1-lo basta executar o comando <code>chmod+x start &amp;&amp; ./start</code> ou <code>/bin/bash start</code>, na pasta files.</p> start<pre><code>#!/bin/bash\n\n# Instala depend\u00eancias para execu\u00e7\u00e3o correta do script.\n# \u00c9 necess\u00e1rio ter o pipenv na m\u00e1quina.\nfunction setup_venv() {\n  status=\"$(pipenv verify)\" || return 1\n  if ! [[ $status == **up-to-date** ]]; then\n    echo \"Instalando depend\u00eancias do Pipfile.\"\n    pipenv install\n    clear\n  fi\n}\n\nfunction main() {\n  # Limpa a console.\n  clear\n\n  setup_venv || return 1\n\n  # Recupera o IP da m\u00e1quina de forma din\u00e2mica.\n  host=$(hostname -I | awk -F ' ' '{print $1}')\n\n  # Exporta as vari\u00e1veis que ser\u00e3o recuperadas no script python.\n  export host=\"$host\"\n  export log_level='INFO'\n\n  # Roda com os argumentos ($@).\n  # Esses argumentos s\u00e3o passados para os inputs automaticamente.\n  pipenv run python main \"$@\"\n}\n\nmain \"$@\" || {\n  echo \"Error. Aborting.\"\n  exit 1\n}\n</code></pre>"},{"location":"websocket_lab/relatorio/#codigo-fonte","title":"C\u00f3digo-Fonte","text":"<p>O c\u00f3digo fonte foi organizado em pacotes python, seguindo a seguinte estrutura:</p> <pre><code>\u251c\u2500\u2500 main\n\u2502   # Pacote destinado aos clientes.\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 clients \n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 http_client.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ws_client.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __main__.py\n\u2502   # Pacote destinado aos servidores.\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 servers\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 http_server.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ws_server.py\n\u2502   # Pacote com fun\u00e7\u00f5es utilit\u00e1rias.\n\u2502 \u00a0\u00a0\u2514\u2500\u2500 utils\n\u2502\u00a0 \u00a0    \u2514\u2500\u2500 __init__.py\n</code></pre>"},{"location":"websocket_lab/relatorio/#pacote-principal","title":"Pacote principal","text":"<p>O entrypoint do script encontra-se no arquivo <code>files/main/__main__.py</code>.</p> __main.py__<pre><code>import datetime\nimport sys\nfrom multiprocessing import Process\nfrom typing import Callable\n\nfrom utils import logger, get_env, format_results\nfrom servers import serve_ws, serve_http\nfrom clients import http_connect, ws_connect\n\n\n# Fun\u00e7\u00e3o utilit\u00e1ria para recuperar entrada ou ler dos sys.args\ndef get_input(prompt: str) -&gt; str:\n    global arg\n    try:\n        arg += 1\n        return sys.argv[arg - 1]\n    except IndexError:\n        return input(prompt)\n\n\ndef get_option() -&gt; int:\n    return int(\n        get_input('Choose quantity of pings to run [-1 to exit]: '))\n\n\ndef run_option(desc: str, server: Process,\n               client: Callable) -&gt; dict:\n    global d, pings\n    d['qt_pings'] = pings\n    play = desc.lower()\n\n    if not server.is_alive():\n        logger.debug(f'Starting server to {play}')\n        server.start()\n\n    c = Process(target=client, kwargs=d)\n\n    logger.debug(\n        f'Starting client to {play[:-2]} with {pings} pings.')\n    start = datetime.datetime.now()\n\n    c.start()\n    c.join()\n\n    end = datetime.datetime.now()\n    result = {\n        'server': server.name,\n        'qt_pings': d['qt_pings'],\n        'start': start.isoformat(),\n        'end': end.isoformat(),\n        'duration': end - start,\n    }\n    logger.info(f'Finished run. Results: {result}')\n    return result\n\n\ndef main():\n    global d\n    results = []\n    logger.setLevel(d['log_level'])\n    logger.debug(\n        f'Running with args: '\n        f'{\" \".join([f\"{k}={v}\" for k, v in d.items()])}.')\n    ops = [\n        {\n            'desc': 'Play ping pong with WS.',\n            'server': Process(target=serve_ws, kwargs=d, name='WS'),\n            'client': ws_connect\n        },\n        {\n            'desc': 'Play ping pong with HTTP.',\n            'server': Process(target=serve_http, kwargs=d, name='HTTP'),\n            'client': http_connect\n        },\n    ]\n\n    try:\n        global pings\n        pings = get_option()\n        while pings != -1:\n            for op in ops:\n                results.append(run_option(**op))\n            pings = get_option()\n\n    except Exception as e:\n        logger.error(e)\n        raise Exception(e)\n    finally:\n        for s in [d['server']\n                  for d in ops if d['server'].is_alive()]:\n            logger.info(f'Stopping process: {s.name}.')\n            s.kill()\n        return results\n\n\nif __name__ == '__main__':\n    pings = 50\n    arg = 1\n    d = get_env()\n    rs = main()\n    table = format_results(rs)\n\n    with open('report.md', 'w', encoding='utf-8') as report:\n        report.write('\\n'.join(table))\n</code></pre>"},{"location":"websocket_lab/relatorio/#configuracao-dos-servidores","title":"Configura\u00e7\u00e3o dos Servidores","text":"<p>Os clientes encontram-se no m\u00f3dulo <code>files/main/servers</code>.</p> servers/http_server.py<pre><code>from http.server import BaseHTTPRequestHandler\nfrom socketserver import TCPServer\n\nfrom utils import http_logger as logger, get_reply, str_from_header\n\n\n# Classe que recebe e responde \u00e0s requisi\u00e7\u00f5es HTTP, com m\u00e9todos GET e POST\n# implementados.\nclass HTTPHandler(BaseHTTPRequestHandler):\n    def do_GET(self):\n        self._log_request_info('GET')\n        self.send_response(200)\n        self.send_header('Content-type', 'text/plain')\n        self.end_headers()\n        self.wfile.write(b'Hello, HTTP!')\n\n    def do_POST(self):\n        self._log_request_info('POST')\n        # Recupera a quantidade de caracteres para ler do quadro\n        # enviado.\n        content_length = int(\n            self.headers.get('Content-Length'))\n        data = self.rfile.read(\n            content_length).decode('utf-8')\n        logger.info(f\"Received POST data: {data}\")\n        self.send_response(200)\n        self.send_header('Content-type', 'text/plain')\n        self.end_headers()\n        self.wfile.write(get_reply(data).encode('utf-8'))\n\n    def _log_request_info(self, method: str):\n        logger.info(\n            f'Method: {method}. Request headers: '\n            f'{str_from_header(self.headers)}')\n\n\ndef serve_http(host: str, http_port: int, **kwargs):\n    httpd = TCPServer((host, http_port), HTTPHandler)\n    logger.info(\n        f'Starting HTTP server at port: {http_port}')\n    httpd.serve_forever()\n</code></pre> servers/ws_server.py<pre><code>import asyncio\n\nfrom websockets import WebSocketServerProtocol, serve\nfrom utils import ws_logger as logger, get_reply, str_from_header\n\n\n# Fun\u00e7\u00e3o ass\u00edncrona para receber e responder \u00e0s requisi\u00e7\u00f5es via\n# WebSocket.\nasync def ws_handler(websocket: WebSocketServerProtocol, path: str):\n    logger.info(\n        f'Client connected. Request headers: '\n        f'{str_from_header(websocket.request_headers)}')\n    # Mant\u00e9m a conex\u00e3o ativa.\n    while True:\n        try:\n            data = await websocket.recv()\n            logger.info(f\"Received data: {data}\")\n            await websocket.send(get_reply(data))\n\n        except Exception as e:\n            logger.info(f'Connection terminated. [{e}]')\n            break\n\n\ndef serve_ws(host: str, ws_port: int, **kwargs):\n    logger.info(\n        f'Starting WebSocket server at port: {ws_port}')\n\n    loop = asyncio.new_event_loop()\n    asyncio.set_event_loop(loop)\n\n    ws_server = serve(ws_handler, host, ws_port)\n    loop.run_until_complete(ws_server)\n    loop.run_forever()\n</code></pre> servers/__init__.py<pre><code>from .http_server import serve_http\nfrom .ws_server import serve_ws\n</code></pre>"},{"location":"websocket_lab/relatorio/#configuracoes-dos-clientes","title":"Configura\u00e7\u00f5es dos Clientes","text":"<p>Os clientes encontram-se no m\u00f3dulo <code>files/main/clients</code>.</p> clients/http_client.py<pre><code>import requests\n\nfrom utils import client_logger as logger\n\n\ndef http_connect(host, http_port: int,\n                 qt_pings: int, **kwargs):\n    logger.info(\"Playing ping pong with HTTP.\")\n    url = f'http://{host}:{http_port}'\n    sent = 0\n    logger.debug(f'Verifying if server is up...')\n    r = requests.get(url)\n\n    if not r.ok:\n        raise Exception(r.content.decode)\n\n    for x in range(qt_pings):\n        r = requests.post(url, f\"Ping{x}\")\n        result = r.content.decode()\n        logger.info(f\"Received {result}.\")\n        sent += 1\n\n    assert sent == qt_pings\n    logger.debug(f'Sent {sent} pings. Finishing test.')\n</code></pre> clients/ws_client.py<pre><code>from websocket import WebSocket\nfrom websocket import create_connection\n\nfrom utils import client_logger as logger\n\n\ndef ws_connect(host: str, ws_port: int,\n               qt_pings: int = 5, **kwargs):\n    logger.info(\"Playing ping pong with WebSocket:\")\n    url = f'ws://{host}:{ws_port}'\n    ws = None\n    try:\n        logger.info(f'Creating connection on {url}.')\n        ws: WebSocket = create_connection(url)\n        while not ws or not ws.connected:\n            logger.info(f'Waiting connection...')\n    except ConnectionRefusedError as e:\n        logger.info(f'{e}')\n\n    sent = 0\n    try:\n        for x in range(qt_pings):\n            if ws.connected:\n                ws.send(f\"Ping {x}!\")\n                result = ws.recv()\n                logger.info(f\"Received {result}.\")\n                sent += 1\n\n        ws.close()\n        assert sent == qt_pings\n        logger.info(\n            f'Sent {sent} pings. Closing connection.')\n    except Exception as e:\n        raise Exception(e)\n</code></pre> clients/__init__.py<pre><code>from .http_client import http_connect\nfrom .ws_client import ws_connect\n</code></pre>"},{"location":"websocket_lab/relatorio/#modulo-de-utilitarios","title":"M\u00f3dulo de Utilit\u00e1rios","text":"utils/__init__.py<pre><code>import logging\nimport socket\nfrom os import environ\n\n# Setup logger\nlogging.basicConfig(\n    format=\"[%(levelname)s %(asctime)s] (%(name)s): %(message)s\",\n    level=logging.INFO,\n    datefmt=\"%H:%M:%S\")\n\nlogger = logging.getLogger('main')\nhttp_logger = logging.getLogger('HTTP')\nws_logger = logging.getLogger('WS')\nclient_logger = logging.getLogger('CLIENT')\n\n\ndef get_reply(data: str):\n    if \"ping\" in data.lower():\n        return 'Pong!'\n    return f'Data {data} received successfully.'\n\n\ndef str_from_header(headers) -&gt; str:\n    h = dict(headers)\n    return '; '.join([f'{k}: {h.get(k)}' for k in h.keys()])\n\n\ndef get_env() -&gt; dict:\n    try:\n        host = str(environ['host'])\n\n        soc = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        soc.bind(('', 0))\n        ws_port = soc.getsockname()\n\n        soc_http = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        soc_http.bind(('', 0))\n        http_port = soc_http.getsockname()\n\n        return {'host': host,\n                'ws_port': ws_port[1],\n                'http_port': http_port[1],\n                'log_level': environ['log_level'].upper()}\n    except KeyError as e:\n        logger.error(f'Provide value for {e}.')\n\n\ndef format_results(results: list[dict]):\n    if not len(results):\n        return\n\n    table = []\n    max_widths = [max(len(str(k)), len(str(v)))\n                  for k, v in results[0].items()]\n    headers = [key.replace(\"_\", \" \")\n               .capitalize()\n               .ljust(max_widths[i])\n               for i, key in enumerate(results[0].keys())]\n    header = '|' + ' | '.join(headers) + '|'\n    separators = '|' + \\\n                 ' | '.join(['-' * x for x in max_widths]) + '|'\n\n    print(header)\n    print(separators)\n    table += [header, separators]\n    for r in results:\n        row = '|' + \\\n              ' | '.join(str(value).ljust(max_widths[i])\n                         for i, value in enumerate(r.values())) + '|'\n        print(row)\n        table.append(row)\n\n    return table\n</code></pre>"},{"location":"websocket_lab/relatorio/#execucao","title":"Execu\u00e7\u00e3o","text":"<p>Os argumentos fornecidos para o script s\u00e3o repassados para o m\u00f3dulo main do python, dessa forma, \u00e9 poss\u00edvel executar os testes passando as entradas desejadas separadas por espa\u00e7os. O comando <code>/bin/bash start 4 80 100 -1</code> testa os servidores com 4, 80 e 100 pings, em seguida finaliza os testes.</p> <p>Para obten\u00e7\u00e3o de resultados mais significativos, o teste foi realizado com 1000, 5000, 10000 e 200000 requisi\u00e7\u00f5es.</p> <pre><code>bin/bash files/start 1000 5000 10000 200000 -1\n</code></pre>"},{"location":"websocket_lab/relatorio/#resultados-obtidos","title":"Resultados Obtidos","text":"<p>Os resultados obtidos foram registrados na tabela 1, presente tamb\u00e9m no arquivo <code>files/results.md</code>.</p> Server Qt pings Start End Duration WS 1000 2023-12-02T13:56:12.480478 2023-12-02T13:56:12.786565 0:00:00.306087 HTTP 1000 2023-12-02T13:56:12.787987 2023-12-02T13:56:14.529089 0:00:01.741102 WS 5000 2023-12-02T13:56:14.529554 2023-12-02T13:56:15.701015 0:00:01.171461 HTTP 5000 2023-12-02T13:56:15.701424 2023-12-02T13:56:24.817563 0:00:09.116139 WS 10000 2023-12-02T13:56:24.818105 2023-12-02T13:56:27.183849 0:00:02.365744 HTTP 10000 2023-12-02T13:56:27.184353 2023-12-02T13:56:43.496875 0:00:16.312522 WS 200000 2023-12-02T13:56:43.497272 2023-12-02T13:57:41.734733 0:00:58.237461 HTTP 200000 2023-12-02T13:57:41.735176 2023-12-02T14:03:43.133729 0:06:01.398553 <p> Resultados obtidos. </p>"},{"location":"websocket_lab/relatorio/#consideracoes-finais","title":"Considera\u00e7\u00f5es Finais","text":"<p>A partir dos resultados obtidos (Tabela 1), foram realizados os c\u00e1lculos de diferen\u00e7a de desempenho conforme a quantidade de requisi\u00e7\u00f5es e os resultados obtidos (Tabela 2).</p> Qtde de Pings Dura\u00e7\u00e3o WS (s) Dura\u00e7\u00e3o HTTP (s) Diferen\u00e7a (HTTP - WS) (s) 1000 0.306087 1.741102 1.435015 5000 1.171461 9.116139 7.944678 10000 2.365744 16.312522 13.946778 200000 58.237461 361.398553 303.161092 <p> Resultados formatados. </p> <p>Os resultados da tabela 2 foram representados graficamente (Figura 6), evidenciando a disparidade no desempenho dos protocolos para muitas requisi\u00e7\u00f5es sequenciais.</p> <p> Gr\u00e1fico comparativo entre a dura\u00e7\u00e3o das requisi\u00e7\u00f5es. (Fonte: autoria pr\u00f3pria)</p> <p>Os resultados obtidos refor\u00e7am a efici\u00eancia do protocolo websockets no contexto de comunica\u00e7\u00e3o em tempo real. O padr\u00e3o linear de crescimento da diferen\u00e7a de desempenho tamb\u00e9m indica que quanto menor o n\u00famero de requisi\u00e7\u00f5es, menor a diferen\u00e7a de desempenho, sendo assim o protocolo HTTP mais adequado.</p>"},{"location":"websocket_lab/relatorio/#referencias","title":"Refer\u00eancias","text":"<p>[1] MOL, Marcos. Getting Started with Unix Domain Sockets. Medium, [S.l.], [s.d.]. Dispon\u00edvel em: https://medium.com/swlh/getting-started-with-unix-domain-sockets-4472c0db4eb1. Acesso em: 02 dez. 2023.  [2] IETF. RFC 6455 - The WebSocket Protocol. [S.l.], [s.d.]. Dispon\u00edvel em: https://datatracker.ietf.org/doc/html/rfc6455. Acesso em: 02 dez. 2023.  [3] WALLARM. WebSocket vs HTTP: How Are These 2 Different?. [S.l.], [s.d.]. Dispon\u00edvel em: https://www.wallarm.com/what/websocket-vs-http-how-are-these-2-different. Acesso em: 02 dez. 2023.  [4] TANENBAUM, Andrew S.; WETHERALL, David J. Redes de Computadores. 5. ed. [Local de Publica\u00e7\u00e3o]: Editora, Ano.  [5] MOZILLA. WebSockets API. [S.l.], [s.d.]. Dispon\u00edvel em: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API. Acesso em: 02 dez. 2023.  [6] WHATWG. The WebSocket Interface. [S.l.], [s.d.]. Dispon\u00edvel em: https://websockets.spec.whatwg.org/#the-websocket-interface. Acesso em: 02 dez. 2023. </p>"},{"location":"websocket_lab/files/report/","title":"Report","text":"Server Qt pings Start End Duration WS 5 2023-12-02T15:11:41.825508 2023-12-02T15:11:41.835715 0:00:00.010207 HTTP 5 2023-12-02T15:11:41.837111 2023-12-02T15:11:41.856810 0:00:00.019699"},{"location":"websocket_lab/files/results/","title":"Results","text":"Server Qt pings Start End Duration WS 1000 2023-12-02T13:56:12.480478 2023-12-02T13:56:12.786565 0:00:00.306087 HTTP 1000 2023-12-02T13:56:12.787987 2023-12-02T13:56:14.529089 0:00:01.741102 WS 5000 2023-12-02T13:56:14.529554 2023-12-02T13:56:15.701015 0:00:01.171461 HTTP 5000 2023-12-02T13:56:15.701424 2023-12-02T13:56:24.817563 0:00:09.116139 WS 10000 2023-12-02T13:56:24.818105 2023-12-02T13:56:27.183849 0:00:02.365744 HTTP 10000 2023-12-02T13:56:27.184353 2023-12-02T13:56:43.496875 0:00:16.312522 WS 200000 2023-12-02T13:56:43.497272 2023-12-02T13:57:41.734733 0:00:58.237461 HTTP 200000 2023-12-02T13:57:41.735176 2023-12-02T14:03:43.133729 0:06:01.398553"}]}